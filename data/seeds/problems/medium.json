[
  {
    "slug": "binary-search",
    "title": "Binary Search",
    "description": "Given an array of integers nums which is sorted in ascending order, and an integer target, write a function to search target in nums. If target exists, then return its index. Otherwise, return -1. You must write an algorithm with O(log n) runtime complexity.",
    "difficulty": "Medium",
    "isPublic": true,
    "isActive": true,
    "timeLimitMs": 2000,
    "memoryLimitMb": 256,
    "tags": ["array", "binary-search"],
    "testCases": [
      {
        "input": "[-1,0,3,5,9,12]\n9",
        "expectedOutput": "4",
        "isSample": true
      },
      {
        "input": "[-1,0,3,5,9,12]\n2",
        "expectedOutput": "-1",
        "isSample": true
      },
      {
        "input": "[5]\n5",
        "expectedOutput": "0",
        "isSample": false
      },
      {
        "input": "[]\n1",
        "expectedOutput": "-1",
        "isSample": false
      }
    ]
  },
  {
    "slug": "merge-two-sorted-lists",
    "title": "Merge Two Sorted Lists",
    "description": "You are given the heads of two sorted linked lists list1 and list2. Merge the two lists in a sorted manner and return the head of the merged linked list. The list should be made by splicing together the nodes of the first two lists.",
    "difficulty": "Medium",
    "isPublic": true,
    "isActive": true,
    "timeLimitMs": 2000,
    "memoryLimitMb": 256,
    "tags": ["linked-list", "recursion"],
    "testCases": [
      {
        "input": "[1,2,4]\n[1,3,4]",
        "expectedOutput": "[1,1,2,3,4,4]",
        "isSample": true
      },
      {
        "input": "[]\n[]",
        "expectedOutput": "[]",
        "isSample": true
      },
      {
        "input": "[]\n[0]",
        "expectedOutput": "[0]",
        "isSample": false
      },
      {
        "input": "[1,2,3]\n[4,5,6]",
        "expectedOutput": "[1,2,3,4,5,6]",
        "isSample": false
      }
    ]
  },
  {
    "slug": "balanced-parentheses",
    "title": "Valid Parentheses",
    "description": "Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid. An input string is valid if: Open brackets must be closed by the same type of brackets. Open brackets must be closed in the correct order. Every close bracket has a corresponding open bracket of the same type.",
    "difficulty": "Medium",
    "isPublic": true,
    "isActive": true,
    "timeLimitMs": 2000,
    "memoryLimitMb": 256,
    "tags": ["string", "stack"],
    "testCases": [
      {
        "input": "()",
        "expectedOutput": "true",
        "isSample": true
      },
      {
        "input": "()[]{}",
        "expectedOutput": "true",
        "isSample": true
      },
      {
        "input": "(]",
        "expectedOutput": "false",
        "isSample": false
      },
      {
        "input": "([)]",
        "expectedOutput": "false",
        "isSample": false
      },
      {
        "input": "{[]}",
        "expectedOutput": "true",
        "isSample": false
      }
    ]
  }
]